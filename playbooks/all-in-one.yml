---
- name: Resize filesystem to full disk size
  hosts: all-in-one
  become: true
  handlers:
    - name: Resize filesystem
      ansible.builtin.command:
        cmd: "xfs_growfs /"
      register: xfs_growfs_command
      changed_when: "'data blocks changed' in xfs_growfs_command.stdout"
  tasks:
    - name: Install growpart utility
      ansible.builtin.package:
        name: "cloud-utils-growpart"
        state: "present"
    - name: Resize Partition
      ansible.builtin.command:
        cmd: "growpart
              {{ (ansible_mounts | selectattr('mount', 'eq', '/') | map(attribute='device') | first)[:-1] }}
              {{ (ansible_mounts | selectattr('mount', 'eq', '/') | map(attribute='device') | first)[-1:] }}" # e.g. "growpart /dev/vda 5"
      register: growpart_command
      changed_when: "'CHANGED' in growpart_command.stdout"
      failed_when:
        - "'NOCHANGE' not in growpart_command.stdout"
        - "growpart_command.rc != 0"
      notify: "Resize filesystem"

- name: Install vanity packages
  hosts: all-in-one
  become: true
  handlers:
  tasks:
    - name: Install vanity packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: "present"
      loop: ["bash-completion", "vim"]
    - name: Upgrade all packages # noqa package-latest
      ansible.builtin.dnf:
        name: "*"
        state: latest

- name: Podman Roles
  hosts: all-in-one
  become: true
  pre_tasks:
    - name: Install prerequisite packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: "present"
      loop: ["python3-cryptography"]
    - name: Create Podman User
      ansible.builtin.user:
        name: "{{ podman_run_as_user }}"
        create_home: true # Hosts mount points for container
        password: "!" # Disabled
        system: false # Needs subuid and subgid
    - name: Create certificate directory
      ansible.builtin.file:
        path: "/home/{{ podman_run_as_user }}/certs"
        state: "directory"
        owner: "{{ podman_run_as_user }}"
        group: "{{ podman_run_as_user }}"
        mode: "0755"
    - name: Create private key for certificate
      community.crypto.openssl_privatekey:
        path: "/home/{{ podman_run_as_user }}/certs/selfsigned.key"
        owner: "{{ podman_run_as_user }}"
        mode: "0644"
    - name: Generate CSR for self-signed certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: "/home/{{ podman_run_as_user }}/certs/selfsigned.key"
        common_name: "{{ ansible_hostname }}.{{ ansible_dns.search[0] }}"
        authority_cert_issuer: "DNS:localhost" # Keycloak fails if issuer DN is empty
        authority_cert_serial_number: "1"
      register: selfsigned_csr
      changed_when: false
    - name: Self-sign certificate from CSR
      community.crypto.x509_certificate:
        path: "/home/{{ podman_run_as_user }}/certs/selfsigned.pem"
        csr_content: "{{ selfsigned_csr.csr }}"
        privatekey_path: "/home/{{ podman_run_as_user }}/certs/selfsigned.key"
        provider: "selfsigned"
        owner: "{{ podman_run_as_user }}"
        mode: "0644"
  roles:
    - fedora.linux_system_roles.podman
  post_tasks:
    - name: Generate Podman completion scripts
      ansible.builtin.command:
        cmd: "podman completion -f /etc/bash_completion.d/podman bash"
        creates: "/etc/bash_completion.d/podman"
